from Handlers.communication_handler import start_communication


# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å –æ–±—â–µ–Ω–∏—è —Å –ò–ò
async def conversation_loop(bot, message, user_states, user_service, openai):
    # –ó–¥–µ—Å—å –º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤–≤–µ–ª –ª–∏ —é–∑–µ—Ä —Å–ª–æ–≤–æ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–≤–µ—Ä—â–∞–µ—Ç—Å—è —Ü–∏–∫–ª —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    if message.text.strip().lower() == '–ø–æ–∫–∞':
        user_states.pop(message.chat.id)  # Remove user state
        await bot.send_message(message.chat.id, "–ü–æ–∫–∞! –ù–∞–¥–µ—é—Å—å, –º—ã –µ—â–µ –ø–æ–æ–±—â–∞–µ–º—Å—è üêß")

        # –ï—Å–ª–∏ –Ω–µ –≤–≤–µ–ª, —Ç–æ –º—ã –Ω–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —É–º–µ–Ω—å—à–∞–µ–º credit –Ω–∞ 1
    else:
        try:
            await start_communication(bot, message, openai)
            user = await user_service.get_user(message.chat.id)
            user['credits'] -= 1
            await user_service.update_credits(message.chat.id, user['credits'])
        except ConnectionError:
            await bot.send_message(message.chat.id, '–ö–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º...')
        except Exception:
            await bot.send_message(message.chat.id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞...')
